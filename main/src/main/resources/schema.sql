drop table if exists participation_requests cascade;
drop table if exists compilation_events cascade;
drop table if exists events cascade;
drop table if exists users cascade;
drop table if exists category cascade;
drop table if exists locations cascade;
drop table if exists compilations cascade;
drop table if exists comments cascade;


CREATE TABLE IF NOT EXISTS users
(
    id    INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name  VARCHAR(1024) NOT NULL,
    email VARCHAR(1024) NOT NULL
);

CREATE TABLE IF NOT EXISTS category
(
    id   INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(1024) NOT NULL
);

CREATE TABLE IF NOT EXISTS locations
(
    id  INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat INT NOT NULL,
    lon INT NOT NULL
);

CREATE TABLE IF NOT EXISTS events
(
    id                 INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    annotation         VARCHAR(2000) NOT NULL,
    category_id        INT           NOT NULL,
    confirmed_requests INT,
    created_on         TIMESTAMP,
    description        VARCHAR(7000) NOT NULL,
    event_date         TIMESTAMP,
    initiator_id       INT           NOT NULL,
    location_id        INT,
    paid               BOOLEAN       NOT NULL,
    participant_limit  INT           NOT NULL,
    published_on       TIMESTAMP,
    request_moderation BOOLEAN       NOT NULL,
    state              VARCHAR(16),
    title              VARCHAR(1024) NOT NULL,
    views              INT,
    FOREIGN KEY (category_id) REFERENCES category (id) ON DELETE CASCADE,
    FOREIGN KEY (initiator_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (location_id) REFERENCES locations (id) ON DELETE CASCADE

);

CREATE TABLE IF NOT EXISTS participation_requests
(
    id       INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id  INT NOT NULL,
    event_id INT,
    created  TIMESTAMP,
    status   VARCHAR(1024),
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN,
    title  VARCHAR(1024)
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id INT,
    event_id       INT,
    PRIMARY KEY (compilation_id, event_id),
    FOREIGN KEY (compilation_id) REFERENCES compilations (id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS comments
(
    id        INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    text      VARCHAR(1024) NOT NULL,
    author_id INT           NOT NULL,
    event_id  INT           NOT NULL,
    updated   boolean,
    created   TIMESTAMP     NOT NULL,
    FOREIGN KEY (author_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (event_id) REFERENCES events (id) ON DELETE CASCADE
);